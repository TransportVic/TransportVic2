html
  head
    script(src='/static/scripts/util.js')
    script(src='/static/scripts/mockups/reload.js' async)
    //- find a way (maybe send json) to update screen w/o reloading images
    link(rel='stylesheet' href='/static/css/mockups/base-style.css')
    link(rel='stylesheet' href='/static/css/mockups/actual-line-colours.css')
    link(rel='stylesheet' href='/static/css/mockups/fss-escalator.css')
  body
    -
      let northernGroup = [
        "2-B31", // craigieburn
        "2-SYM",
        "2-UFD",
        "2-WBE",
        "2-WMN",
        "2-ain"
      ]

      let cliftonHillGroup = [
        "2-MER",
        "2-HBG"
      ]
    
      let firstDeparture = departures[0]
      let noDepartures = !departures.length
      let additionalInfo
      
      if (!noDepartures)
        additionalInfo = firstDeparture.additionalInfo
      else firstDeparture = { codedLineName: 'no-line' }
    div.contents
      div(class='topLineBanner ' + firstDeparture.codedLineName)
      div.noDepartures(style=noDepartures ? 'display: block;' : 'display: none;')
        div.firstDepartureTime
          div.platform.no-line
            span=platform
        div.textWrapper
          img(src='/static/images/mockups/no-boarding-train.svg')
          p No trains are departing from this platform
      div.firstDepartureInfo(style=noDepartures ? 'display: none;' : 'display: flex;')
        div.details
          if !noDepartures
            span.scheduledDepartureTime=firstDeparture.scheduledDepartureTime.format('h:mmA').toLowerCase()
          else
            span.scheduledDepartureTime
          br
          if !noDepartures
            span.destination=firstDeparture.trip.destination.slice(0, -16)
          else
            span.destination
          br
          if !noDepartures
            -
              let stoppingPattern = ''
              if (additionalInfo.expressCount === 0)
                stoppingPattern = 'Stops All'
              else if (additionalInfo.expressCount <= 2)
                stoppingPattern='Ltd Express'
              else stoppingPattern = 'Express'
                
              if (additionalInfo.viaCityLoop) stoppingPattern += ' via City Loop'
              else {
                if (northernGroup.includes(firstDeparture.trip.routeGTFSID)) stoppingPattern += ' via Sthn Cross'
                else if (cliftonHillGroup.includes(firstDeparture.trip.routeGTFSID)) stoppingPattern += ' via Jolimont' //?
                else stoppingPattern += ' via Richmond'
                
              }
            span.stoppingPattern=stoppingPattern
          else
            span.stoppingPattern
        div.firstDepartureTime
          if !noDepartures
            div(class='platform ' + firstDeparture.codedLineName)
              span=platform
            div.timeToDeparture
              span=firstDeparture.prettyTimeToDeparture
          else
            div.platform
              span
            div.timeToDeparture
              span
      div.greyLine(style=noDepartures ? 'display: none;' : 'display: block;')
      div(class='stoppingAt ' + firstDeparture.codedLineName style=noDepartures ? 'display: none;' : 'display: block;')
        div
          if !noDepartures
            -
              let n
              let stopCount = additionalInfo.screenStops.length
              
              if (stopCount >= 31) n = 20
              else if (stopCount >= 27) n = 18
              else if (stopCount >= 24) n = 17
              else if (stopCount >= 16) n = 16
              // else if (stopCount >= 12) n = 12
              else n = 12
              
              let firstNStations = additionalInfo.screenStops.slice(0, n)
              let nextNStations = additionalInfo.screenStops.slice(n)
              
            // possible - load all icons at once? then switch (display=none & display=block) as needed?
            mixin stationRow(name, imgSource)
              -let style = 'height: 16px !important;'
              div.stationRow(style=(imgSource.includes('stub') ? style : ''))
                if !imgSource.includes("stub")
                  img(src=`/static/images/mockups/station-${imgSource}.svg`)
                else
                  img(src=`/static/images/mockups/station-${imgSource}.svg` height="16px" width="42px" style=style)
                p(class=imgSource)=name
                
            div
              +stationRow(" ", "stub")
              
              - let hasTerminating = additionalInfo.screenStops.length <= n
              
              div.stationRow
                img(src=`/static/images/mockups/station-stops-at.svg` class=firstDeparture.codedLineName)
                p(class=firstDeparture.codedLineName)=firstNStations[0].stopName

              for station in firstNStations.slice(1, hasTerminating ? -1 : n)
                +stationRow(station.stopName, station.isExpress ? "express" : "stops-at")
              if hasTerminating
                +stationRow(firstNStations.slice(-1)[0].stopName, "terminates")
              else
                +stationRow(" ", "halfstub")
                +stationRow(" ", "filler")
                  
            div
              if nextNStations.length
                +stationRow(" ", "halfstub")
                +stationRow(" ", "filler")
                for station in nextNStations.slice(0, -1)
                  +stationRow(station.stopName, station.isExpress ? "express" : "stops-at")
                +stationRow(nextNStations.slice(-1)[0].stopName, "terminates")
          else
            div
            div
        
      div.next3Departures    
        div.blackLine
        - let i = 0
        for departure in departures.concat([null, null, null, null, null]).slice(1, 5)
          if !!departure
            - let {additionalInfo} = departure
            div.smallDeparture
              div.left
                div(class='sideBar ' + departure.codedLineName)
                p=departure.scheduledDepartureTime.format('h:mmA').toLowerCase()
              div.centre
                p=departure.trip.destination.slice(0, -16)
              div.right
                div(class='platform ' + departure.codedLineName)
                  p=platform
                div.timeToDeparture
                  p=departure.prettyTimeToDeparture.replace(' ', '')
          else    
            div.smallDeparture
              div.left
                div(class='sideBar no-line')
                p --
              div.centre
                p --
              div.right
                div(class='platform no-line')
                  p &nbsp;
                div.timeToDeparture
                  p &nbsp;
          if i++ !== 3
            div.greyLine
