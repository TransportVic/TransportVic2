extends ../layout

block head
  title=`TransportVic - ${stop.stopName}`

block title
  span=stop.stopName

block scripts
  script(src='/static/scripts/timings.js' async)
  
append style
  link(rel='stylesheet' href='/static/css/combined-colours.css')
  link(rel='stylesheet' href='/static/css/timings/base-style.css')

append content
  -
    let stopModes = stop.bays.map(e => e.mode).filter((e, i, a) => a.indexOf(e) === i)
    let iconMap = {
      'regional train': 'vline',
      'metro train': 'metro',
      'regional coach': 'coach'
    }
  if stopModes.length > 1
    div#modeSwitch
      for mode in stopModes
        -
          let url = `/${iconMap[mode] || mode.replace(' ', '-')}/timings/`
          if (mode === 'bus' || mode === 'tram') 
            url += `${stop.codedSuburb[0]}/`
          url += stop.codedName
          if (mode.includes('train'))
            url = url.slice(0, -16)
        a(href=url class=`modeSwitchType ${mode.replace(' ', '-')} ${mode === 'regional coach' ? '' : 'inactive'}`)
          img(src=`/static/images/clear-icons/${iconMap[mode] || mode}.svg`)
          span=mode
  div#departures
    for departure in departures
      div.departure.no-number
        a.departureInfo
          span.routeName=departure.trip.routeName
          span.towards Towards
          span.destination=departure.trip.destination
          if departure.coachCount > 1
            span.info=`This service has ${departure.coachCount} coaches`
        div.timings
          a(href=departure.tripURL).timing.unknown
            span=departure.prettyTimeToArrival
            span=departure.scheduledDepartureTime.format('HH:mm')
            if departure.busRego
              span.rego=`#${departure.busRego}`
