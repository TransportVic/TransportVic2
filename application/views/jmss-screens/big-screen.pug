html
  head
    script(src='/static/scripts/util.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.26/moment-timezone-with-data-10-year-range.min.js')
    link(rel='stylesheet' href='/static/css/jmss-screens/base-style.css')
    link(rel='stylesheet' href='/static/css/jmss-screens/big-screen.css')
    link(rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto&display=swap')
    script.
      setTimeout(() => location.reload(), 1000 * 60)
      setInterval(() => {
        $('.topRow span:nth-child(2)').textContent = moment.tz('Australia/Melbourne').format('h:mmA').toLowerCase()
      }, 1000)
  body
    div.topRow
      span Monash University PT Connections
      span=currentTime
    div.headers
      - for (let n = 0; n < 3; n++)
        div.header
          span Service
          span Mins
    div.departureColumns
      -
        function getDepartureText(departure) {
          if (departure.minutesToDeparture < 1) return 'Now'
          return departure.minutesToDeparture
        }
        function getWaitingClass(departure, thresholds) {
          if (!departure.estimatedDepartureTime) return 'unknown'
          let waitingClass = 'cannot-make'
          let minutesToFirstDeparture = departure.minutesToDeparture
          if (minutesToFirstDeparture >= thresholds[0])
            waitingClass = 'walk'
          else if (minutesToFirstDeparture >= thresholds[1])
            waitingClass = 'run-fast'
          return waitingClass
        }
      - for (let n = 0; n < 3; n++)
        - let nGroups = busDepartures.slice(n * 8, n * 8 + 8)
        div.departureColumn
          for group in nGroups
            - group = group.sort((a, b) => a.actualDepartureTime - b.actualDepartureTime)
            - let {routeNumber, destination} = group[0]
            div.departureRow
              div.routeNumber
                span=routeNumber
              div.destination
                span Towards
                span=destination

              div(class='departureMinutes ' + getWaitingClass(group[0], [5, 3]))
                span=getDepartureText(group[0])
                if group[1]
                  span='Next: ' + group[1].minutesToDeparture
                else
                  span Next: --
            if n == 2
              div.sub-heading
                span Huntingdale Metro Train Departures
              mixin departureTime(direction)
                - let waitingClass = metroDepartures[direction] ? getWaitingClass(metroDepartures[direction][0], [15, 10]) : 'unknown'
                div(class='departureMinutes ' + waitingClass)
                  if metroDepartures[direction]
                    span=getDepartureText(metroDepartures[direction][0])
                    if metroDepartures[direction][1]
                      span='Next: ' + metroDepartures[direction][1].minutesToDeparture
                    else
                      span Next: --
                  else
                    span --
                    span Next: --
              
              div.departureRow
                div.routeNumber.dandenong-group
                  span Platform
                  span 1
                div.destination
                  span Towards
                  if metroDepartures.Up
                    span=metroDepartures.Up[0].destination
                  else
                    span --
                +departureTime('Up')
                
              for departure in metroDepartures.Down ? metroDepartures.Down.concat(null).slice(0, 2) : [null, null]
                div.departureRow
                  div.routeNumber.dandenong-group
                    span Platform
                    span 2
                  div.destination
                    span Towards
                    if departure
                      span=departure.destination
                    else
                      span --
                  - let waitingClass = departure ? getWaitingClass(departure, [15, 10]) : 'unknown'
                  div(class='departureMinutes ' + waitingClass)
                    if departure
                      span=getDepartureText(departure)
                    else
                      span --
              div.sub-heading
                span Next Clayton V/Line Train Departure
              div.departureRow
                div.routeNumber.vline
                  span Platform
                  span 2
                div.destination
                  span Towards
                  if nextVLineDeparture
                    span=nextVLineDeparture.trip.destination
                  else
                    span --
                - let waitingClass = nextVLineDeparture ? getWaitingClass(nextVLineDeparture, [15, 10]) : 'unknown'
                div(class='departureMinutes ' + waitingClass)
                  if nextVLineDeparture
                    span=getDepartureText(nextVLineDeparture)
                  else
                    span --
              div.departureRow.colour-guide
                div
                  div.walk
                    span Sufficient time
                  div.run-fast
                    span Run for the bus/train
                div
                  div.cannot-make
                    span Too late - wait for the next one
                  div.unknown
                    span No realtime departure available
                  
