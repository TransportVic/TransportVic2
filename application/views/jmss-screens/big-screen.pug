html
  head
    script(src='/static/scripts/util.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.26/moment-timezone-with-data-10-year-range.min.js')
    link(rel='stylesheet' href='/static/css/jmss-screens/base-style.css')
    link(rel='stylesheet' href='/static/css/jmss-screens/big-screen.css')
    link(rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto&display=swap')
    link(rel='preload' as='style' href='/static/css/jmss-screens/base-style.css')
    link(rel='preload' as='style' href='/static/css/jmss-screens/big-screen.css')
    script.
      setTimeout(() => location.reload(), 1000 * 60)
      setInterval(() => {
        $('.topRow span.time').textContent = moment.tz('Australia/Melbourne').format('h:mmA').toLowerCase()
      }, 1000)
  body
    div.topRow
      div
        span.title Monash University PT Connections
        span.motd Honestly just go and wash your hands
      span.time=currentTime
    div.headers
      - for (let n = 0; n < 3; n++)
        div.header
          span Service
          span Mins
    div.departureColumns
      -
        function getDepartureText(departure) {
          if (departure.minutesToDeparture < 1) return 'Now'
          return departure.minutesToDeparture
        }
        function getWaitingClass(departure, thresholds) {
          if (!departure.estimatedDepartureTime) return 'unknown'
          let waitingClass = 'cannot-make'
          let minutesToFirstDeparture = departure.minutesToDeparture
          if (minutesToFirstDeparture >= thresholds[0])
            waitingClass = 'walk'
          else if (minutesToFirstDeparture >= thresholds[1])
            waitingClass = 'run-fast'
          return waitingClass
        }
      - for (let n = 0; n < 3; n++)
        -
          let size = 9
          let columnSize = n === 2 ? 2 : size 
          let columnGroups = busDepartures.slice(n * size, n * size + size)
          let padded = [...columnGroups, ...Array(size).fill([])].slice(0, columnSize)
          
        div.departureColumn
          for group in padded
            -
              group = group.sort((a, b) => a.actualDepartureTime - b.actualDepartureTime)
              let first = group[0]
              let routeNumber, destination
              
              if (first) {
                routeNumber = first.routeNumber
                destination = first.destination
              } else {
                routeNumber = '--'
                destination = '--'
              }
            div.departureRow
              div.routeNumber
                span=routeNumber
              div.destination
                span Towards
                span=destination.split('/')[0]
              
              if first
                div(class='departureMinutes ' + getWaitingClass(first, [6, 4]))
                  span=getDepartureText(first)
                  if group[1]
                    span='Next: ' + group[1].minutesToDeparture
                  else
                    span Next: --
              else
                
                div(class='departureMinutes unknown')
                  span --
                  if group[1]
                    span Next --
          if n == 2
            div.sub-heading
              span Huntingdale Metro Train Departures
            mixin departureTime(direction)
              - let waitingClass = metroDepartures[direction] ? getWaitingClass(metroDepartures[direction][0], [20, 15]) : 'unknown'
              div(class='departureMinutes ' + waitingClass)
                if metroDepartures[direction]
                  span=getDepartureText(metroDepartures[direction][0])
                  if metroDepartures[direction][1]
                    span='Next: ' + metroDepartures[direction][1].minutesToDeparture
                  else
                    span Next: --
                else
                  span --
                  span Next: --
            
            div.departureRow
              div.routeNumber.dandenong-group
                span Platform
                if metroDepartures.Up
                  span 1
                else
                  span --
              div.destination
                span Towards
                if metroDepartures.Up
                  span=metroDepartures.Up[0].destination
                else
                  span --
              +departureTime('Up')
              
            for departure in metroDepartures.Down ? metroDepartures.Down.concat(null).slice(0, 2) : [null, null]
              div.departureRow
                div.routeNumber.dandenong-group
                  span Platform
                  if departure
                    span 2
                  else
                    span --
                div.destination
                  span Towards
                  if departure
                    span=departure.destination
                  else
                    span --
                - let waitingClass = departure ? getWaitingClass(departure, [20, 15]) : 'unknown'
                div(class='departureMinutes ' + waitingClass)
                  if departure
                    span=getDepartureText(departure)
                  else
                    span --
            div.sub-heading
              span Next Clayton V/Line Train Departure
            div.departureRow
              div.routeNumber.vline
                span Platform
                if nextVLineDeparture
                  span 2
                else
                  span --
              div.destination
                span Towards
                if nextVLineDeparture
                  span=nextVLineDeparture.trip.destination.slice(0, -16)
                else
                  span --
              - let waitingClass = nextVLineDeparture ? getWaitingClass(nextVLineDeparture, [20, 15]) : 'unknown'
              div(class='departureMinutes ' + waitingClass)
                if nextVLineDeparture
                  span=getDepartureText(nextVLineDeparture)
                else
                  span --
            div.departureRow.colour-guide
              div
                div.walk
                  span Sufficient time
                div.run-fast
                  span Departing soon - leave now
              div
                div.cannot-make
                  span Too late - wait for the next one
                div.unknown
                  span No realtime departure available
                
