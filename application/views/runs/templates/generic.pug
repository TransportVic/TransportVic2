if trip.vehicleData
  -
    let vehicleIcons = {
      'A1': 'a-b',
      'A2': 'a-b',
      'B2': 'a-b',
      'Z3': 'z3',
      'C': 'c1',
      'D1': 'd',
      'D2': 'd',
      'E1': 'e',
      'E2': 'e'
    }
  div.infoRow
    span=trip.vehicleData.name
    div.vehicle
      span
      -
        let icon
        if (trip.mode === 'tram') icon = vehicleIcons[trip.vehicleData.model] || 'optimus'
        else if (trip.mode === 'bus') icon = 'optimus'
      img(src=`/static/images/icons/${icon}.svg`)
if depot
  div.infoRow.depot
    span.depot Depot: #{depot}
    span.tripID Run #{trip.runID || trip.tripID}
//- Really hacky way to handle this
else if trip.runID && trip.mode !== 'tram'
  div.infoRow
    span Run #{trip.runID}
- let hasNumber = !!routeNumber
div(class=`departure noTiming${hasNumber ? '' : ' noNumber'}`)
  if hasNumber
    a(class=`leftContainer ${routeNumberClass}`)
      if loopDirection
        span.topText=loopDirection
      else if trip.routeDetails
        span.topText=trip.routeDetails
      -
        let className = 'bigNumber'
        if (routeNumber.length > 3) className += ' smaller'
      span(class=className)=routeNumber
  a.departureInfo
    if !hasNumber
      if trip.isRailReplacementBus
        if trip.routeGTFSID === '5-GSR'
          span.routeName The Overland
        else
          span.routeName V/Line #{trip.routeName} Line Rail Replacement
      else
        span.routeName #{trip.routeName}
    span.towards Towards
    span.destination=destination
    if viaText && hasNumber
      span.broadDepartureInfo.clampLine=viaText
    if trip.cancelled
      span.broadDepartureInfo.important CANCELLED
    else if trip.isRailReplacementBus
      span.broadDepartureInfo.important Train Replacement Coach
div.infoRow
  -
    let stopType = ({
      bus: 'Bus Stop',
      tram: 'Tram Stop',
      'regional coach': 'Coach Stop',
      'heritage train': 'Train Station',
      ferry: 'Ferry Stop'
    })[trip.mode]
  
  span #{stopType}
div.timing-list
  -
      let trueMode = trip.mode
      if (trueMode === 'regional coach') trueMode = 'coach'
      if (trueMode === 'heritage train') trueMode = 'heritage'

  for stop in trip.stopTimings
    div.timingRow(id='stop-' + stop.stopGTFSID)
      a.departureInfo(href=`/${trueMode}/timings/${stop.suburb.toLowerCase().replace(/[^\w]/g, '-').replace(/--+/g, '-')}/${stop.stopName.toLowerCase().replace(/[^\w]/g, '-').replace(/--+/g, '-')}`)
        -
          let stopParts = stop.stopName.split('/')
          let stopRoad, stopName
          if (stopParts.length >= 2) {
            stopName = stopParts.slice(0, -1).join('/')
            stopRoad = stopParts.slice(-1)[0]
          } else {
            if (stopParts = stop.stopName.match(/^(\d+) (.+)$/)) {
              stopRoad = stopParts[2]
              stopName = stopParts[1] + ' ' + stopRoad
            } else {
              stopName = stop.stopName
              stopRoad = ''
            }
          }

          let displayName = stopName
          let genericNames = ['General Store', 'Post Office', 'Police Station']
          if (genericNames.includes(displayName)) displayName = `${stop.suburb} ${displayName}`
          if (stop.stopNumber)
            displayName += ` #${stop.stopNumber}`
            
          if (stop.bay)
            displayName += ` (${stop.bay})`
          
          let melbSuburbs = ['Docklands', 'Melbourne City']
          if (trip.mode === 'regional coach' && !trip.isRailReplacementBus && !melbSuburbs.includes(stop.suburb) && !stop.stopName.includes('Railway Station')) {
            stopRoad = stop.stopName
            displayName = stop.suburb
          }
        span.stopName=displayName
        span.stopRoad=stopRoad
      div(class=`timing ${stop.headwayDevianceClass}`)
        span=stop.pretyTimeToDeparture
        span=stop.departureTime || stop.arrivalTime
